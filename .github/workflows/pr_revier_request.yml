name: Notify Reviewers on PR

on:
  pull_request:
    types: [review_requested]
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Wait for reviewers to settle
        run: sleep 10

      - name: Map GitHub usernames to Discord IDs
        id: map-reviewers
        env:
          REVIEWERS_JSON: ${{ toJson(github.event.pull_request.requested_reviewers) }}
        run: |
          echo "üîÑ Mapping GitHub reviewers to Discord mentions..."

          declare -A USER_MAP=(
            ["laggu"]="1269619098405441537"
            ["sezeme"]="534088965050073089"
            ["rlooo"]="1060181420389187715"
            ["yuchem2"]="307875691074945024"
            ["chsjen492"]="1021785294078480394"
            ["HeesooJun"]="347294009548341249"
          )

          mentions=""

          while read login; do
            id=${USER_MAP[$login]}
            if [ -n "$id" ]; then
              mentions+="<@$id> "
            else
              echo "‚ö†Ô∏è No Discord ID mapped for $login"
            fi
          done < <(echo "$REVIEWERS_JSON" | jq -r '.[].login')

          echo "mentions=$mentions" >> "$GITHUB_OUTPUT"

      - name: Check if notification already sent
        id: check
        run: |
          mkdir -p .cache
          SENT_FILE=".cache/sent-${{ github.event.pull_request.number }}.flag"

          if [ -f "$SENT_FILE" ]; then
            echo "üîÅ Already sent notification for this PR. Skipping..."
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "‚úÖ Sending notification for the first time."
            touch "$SENT_FILE"
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Send Discord Notification
        if: steps.check.outputs.skip == 'false'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MENTIONS: ${{ steps.map-reviewers.outputs.mentions }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{
            \"content\": \"üì£ $MENTIONSÎãò! Pull Request Î¶¨Î∑∞Ïñ¥Î°ú ÏßÄÏ†ïÎêêÏäµÎãàÎã§. ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî.\\nüîó PR: $PR_URL\",
            \"allowed_mentions\": {
              \"parse\": [\"users\"]
            }
          }" \
          "$DISCORD_WEBHOOK_URL"
